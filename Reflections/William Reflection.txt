The agile/scrum process is designed to streamline the overall production process by reducing the amount of redundant work. As a result, Scrum/Agile encourages close communication with team members. 

	For the most part we have been achieving these goals. Given that our client had a fairly undeveloped idea of what they wanted, we knew that we would often be changing our app to suit their needs.  By building the app in self contained modules, we avoided the pitfall of having to change all of our code when the client requirements changed. As an example, we built the three types of activities they wanted—maps, nutrition and exercise—only to find out that the layout they wanted for nutrition and exercise were ill-fitting. Thus we had to scrap much of the work we had for 2 modules, but we still had a functioning app because of our maps activity.

	We are definitely on the same page with our community partner. We have had multiple meetings and explained all of our designs and progress so far. We’ve showed them the most up to date version of the app on the Android phone for what we’ve already implemented and also showed them other apps that we intend on modeling our yet to be implemented features on.
	The only moment when we weren’t on the same page was when we were first implementing their idea of what they wanted for the layout of the nutrition and the exercise pages. 

	My hopes and fears have not really changed. My main fear is that I don’t know enough about general coding to implement everything I want to. Hence, my fear is slightly different in that I’m afraid because of my inability to code I will end up with a skeleton of an app that has full of unimplemented features. Adding on to that, I am already accruing a fair amount of technical debt from deciding to use Kotlin in the beginning, in addition to other design issues like choosing recyclerview (recyclerview, which is used for scrolling lists, is difficult to implement because we have to construct our own click listener). 